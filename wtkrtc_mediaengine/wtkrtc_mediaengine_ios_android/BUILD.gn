import("//webrtc.gni")
####################
# Common Configs 
####################
config("wtk_common_warning"){
  if (is_clang) {
    cflags = [
      "-Wno-delete-incomplete",
      "-Wno-undef",
      "-Wno-non-virtual-dtor",
      "-Wno-unused-private-field",
      "-Wno-unused-variable",
      "-Wno-sign-compare",
    ]
  }
}
#iOS not test
if(is_ios) {
  import("//build/config/ios/rules.gni")
  import("//build/config/ios/ios_sdk.gni")
  
  group("WtkMediaEngineObjC") {
    public_deps = []
    if (!build_with_chromium) {
      public_deps += [ ":framework_objc" ]
    }
  }
  
  config("common_config_objc") {
    cflags = [
      "-Wstrict-overflow",
      "-Wmissing-field-initializers",
    ]
  }
  
  #rtc_shared_library("wtkmediaengineobjc") {
  rtc_static_library("wtkmediaengineobjc") {
    #rtc_remove_configs = [ "//build/config/compiler:thin_archive" ]
    sources = [
      "wtk_engine_sdk/ios/wtk_media_oc.mm",
      "wtk_engine_sdk/ios/wtk_media_oc.h",
    ]
    
    configs += [
      "//build/config/compiler:no_chromium_code",
      "//build/config/compiler:no_incompatible_pointer_warnings",
      ":wtk_common_warning",
    ]
    if (is_clang) {
      suppressed_configs += [
        "//build/config/clang:extra_warnings",
        "//build/config/clang:find_bad_constructs",
      ]
    }
    libs = [ "AVFoundation.framework" ]
    public_configs = [ ":common_config_objc" ]
    deps = [
      "wtk_rtc_api:wtk_rtc_api",
      "wtk_service_client:wtk_service_api",
    ]
  }
  
  ios_framework_bundle_with_umbrella_header("framework_objc") {
    info_plist = "wtk_engine_sdk/ios/Info.plist"
    output_name = "WtkMediaEngine"

    common_objc_headers = [
      "wtk_engine_sdk/ios/wtk_media_oc.h",
    ]

    sources = common_objc_headers
    public_headers = common_objc_headers

    ldflags = [
      "-all_load",
      "-install_name",
      "@rpath/$output_name.framework/$output_name",
    ]

    libs = [
      "AVFoundation.framework",
    ]

    deps = [ 
      ":wtkmediaengineobjc",
    ]

    configs += [ "..:common_objc" ]
    public_configs = [ ":common_config_objc" ]

    if (!build_with_chromium && is_clang) {
      # Suppress warnings from the Chromium Clang plugin
      # (bugs.webrtc.org/163).
      configs -= [ "//build/config/clang:find_bad_constructs" ]
    }
  }
} else if(is_android) {
  import("//build/config/android/config.gni")
  import("//build/config/android/rules.gni")

  rtc_shared_library("WtkMediaEngineJni") {
    sources = [
      "wtk_engine_sdk/android/wtk_media_jni.cc",
      "wtk_engine_sdk/android/wtk_media_jni.h",
    ]
    suppressed_configs += [ "//build/config/android:hide_all_but_jni_onload" ]
    configs += [ 
      "//build/config/android:hide_all_but_jni",
      ":wtk_common_warning",
    ]
    if (is_clang) {
      # Suppress warnings from the Chromium Clang plugin (bugs.webrtc.org/163).
      suppressed_configs += [
        "//build/config/clang:extra_warnings",
        "//build/config/clang:find_bad_constructs",
      ]
    }

    deps = [
      "wtk_rtc_api:wtk_rtc_api",
       "wtk_service_client:wtk_service_api",
    ]

    libs = [
      "log",
    ]
  }
}
