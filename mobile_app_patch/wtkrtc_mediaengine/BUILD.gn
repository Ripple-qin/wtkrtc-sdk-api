import("//webrtc.gni")

if (is_android) {
  import("//build/config/android/config.gni")
  import("//build/config/android/rules.gni")
}
####################
# Common Configs 
####################
config("wtk_common_warning"){
  if (is_clang) {
    cflags = [
      "-Wno-delete-incomplete",
      "-Wno-undef",
      "-Wno-non-virtual-dtor",
      "-Wno-unused-private-field",
      "-Wno-unused-variable",
      "-Wno-sign-compare",
    ]
    if(is_ios) {
      cflags += [
        "-Wno-c++14-extensions",
        "-Wno-constexpr-not-const",
      ]
    }
  }
}
####################
# HTTP API Modules 
####################
rtc_source_set("wtk_sync_http_api") {
  sources = [
    "wtk_media_sdk/modules/httpclient/wtk_sync_http_api.cc",
    "wtk_media_sdk/modules/httpclient/wtk_sync_http_api.h",
    "wtk_media_sdk/modules/httpclient/connection.cc",
    "wtk_media_sdk/modules/httpclient/connection.h",
    "wtk_media_sdk/modules/httpclient/restclient.cc",
    "wtk_media_sdk/modules/httpclient/restclient.h",
    "wtk_media_sdk/modules/httpclient/helpers.cc",
    "wtk_media_sdk/modules/httpclient/helpers.h",
    "wtk_media_sdk/modules/httpclient/version.h",
  ]
  defines = [ 
    "WEBRTC_POSIX",
  ]
  include_dirs = [ "wtk_media_sdk/third_party/curl-7_61_1/include" ]
  configs += [
    "//build/config/compiler:no_chromium_code",
    "//build/config/compiler:no_incompatible_pointer_warnings",
    ":wtk_common_warning",
  ]
  deps = [
    "wtk_media_sdk/third_party/curl-7_61_1:libcurl-7_61_1",
  ]
}
####################
# Submit Call Log API Modules 
####################
rtc_source_set("wtk_media_log") {
  sources = [
    "wtk_media_sdk/modules/medialog/wtk_medialog.cc",
    "wtk_media_sdk/modules/medialog/wtk_medialog.h",
  ]
  defines = [ 
    "WEBRTC_POSIX",
  ]
  configs += [
    "//build/config/compiler:no_chromium_code",
    "//build/config/compiler:no_incompatible_pointer_warnings",
    ":wtk_common_warning",
  ]
}
####################
# Notification API Modules 
####################
rtc_source_set("wtk_notification") {
  sources = [
    "wtk_media_sdk/modules/notification/wtk_notification.cc",
    "wtk_media_sdk/modules/notification/wtk_notification.h",
  ]
  defines = [ 
    "WEBRTC_POSIX",
  ]
  configs += [
    "//build/config/compiler:no_chromium_code",
    "//build/config/compiler:no_incompatible_pointer_warnings",
    ":wtk_common_warning",
  ]
}
####################
# USER Profile Module 
####################
rtc_source_set("wtk_user_profile") {
  sources = [
    "wtk_media_sdk/modules/profile/wtk_user_profile.cc",
    "wtk_media_sdk/modules/profile/wtk_user_profile.h",
  ]
  defines = [ 
    "WEBRTC_POSIX",
    "WEBRTC_EXTERNAL_JSON",
  ]
  configs += [
    "//build/config/compiler:no_chromium_code",
    "//build/config/compiler:no_incompatible_pointer_warnings",
    ":wtk_common_warning",
  ]
}
####################
# Tools API Modules 
####################
rtc_source_set("wtk_tools_func") {
  sources = [
    "wtk_media_sdk/modules/utility/tools_func.cc",
    "wtk_media_sdk/modules/utility/tools_func.h",
  ]
  defines = [ 
    "WEBRTC_POSIX",
  ]
  configs += [
    "//build/config/compiler:no_chromium_code",
    "//build/config/compiler:no_incompatible_pointer_warnings",
    ":wtk_common_warning",
  ]
}
####################
# Call API Modules 
####################
rtc_source_set("wtk_call_ctrl") {
  sources = [
    "wtk_media_sdk/modules/call/wtk_call_ctrl.cc",
    "wtk_media_sdk/modules/call/wtk_call_ctrl.h",
    "wtk_media_sdk/modules/call/call_object.cc",
    "wtk_media_sdk/modules/call/call_object.h",
  ]
  defines = [ 
    "WEBRTC_POSIX",
  ]
  configs += [
    "//build/config/compiler:no_chromium_code",
    "//build/config/compiler:no_incompatible_pointer_warnings",
    ":wtk_common_warning",
  ]
}
####################
# Conference API Modules 
####################
rtc_source_set("wtk_conf_ctrl") {
  sources = [
    "wtk_media_sdk/modules/conference/wtk_conf_ctrl.cc",
    "wtk_media_sdk/modules/conference/wtk_conf_ctrl.h",
    "wtk_media_sdk/modules/conference/conf_object.cc",
    "wtk_media_sdk/modules/conference/conf_object.h",
  ]
  defines = [ 
    "WEBRTC_POSIX",
  ]
  configs += [
    "//build/config/compiler:no_chromium_code",
    "//build/config/compiler:no_incompatible_pointer_warnings",
    ":wtk_common_warning",
  ]
}
####################
# PTT API Modules 
####################
rtc_source_set("wtk_ptt_ctrl") {
  sources = [
    "wtk_media_sdk/modules/ptt/wtk_ptt_ctrl.cc",
    "wtk_media_sdk/modules/ptt/wtk_ptt_ctrl.h",
  ]
  defines = [ 
    "WEBRTC_POSIX",
  ]
  configs += [
    "//build/config/compiler:no_chromium_code",
    "//build/config/compiler:no_incompatible_pointer_warnings",
    ":wtk_common_warning",
  ]
}
######################################################################
# Released Android/iOS so lib API                                    #
######################################################################
if(is_ios) {
  rtc_shared_library("WtkMediaSDK") {
    sources = [
      "wtk_media_sdk/common/wtk_media_instance.cc",
      "wtk_media_sdk/common/wtk_media_instance.h",
      "wtk_media_sdk/common/wtk_media_sdk.cc",
      "wtk_media_sdk/common/wtk_media_sdk.h",
      "wtk_media_sdk/common/wtk_media_sdk_define.h",
      "wtk_media_sdk/common/wtk_media_sdk_misc_define.h",
    ]
    deps = []
    sources += [
      #"wtk_media_sdk/common/ios/wtk_media_sdk_oc.mm",
      #"wtk_media_sdk/common/ios/wtk_media_sdk_oc.h",
    ]
    deps += [
      "wtk_rtc_api:wtk_rtc_api",
      #"wtk_service_client:wtk_service_api",
      #":wtk_sync_http_api",
      #":wtk_user_profile",
      #":wtk_media_log",
      #":wtk_notification",
      #":wtk_tools_func",
      #":wtk_call_ctrl",
      #":wtk_conf_ctrl",
      #":wtk_ptt_ctrl",
      #"wtk_media_sdk/third_party/memory_pool:libmemory_pool",
    ]
    configs += [
      ":wtk_common_warning",
    ]
    if (is_clang) {
      suppressed_configs += [
        "//build/config/clang:extra_warnings",
        "//build/config/clang:find_bad_constructs",
      ]
    }
  }
}
if(is_android) {
  rtc_shared_library("WtkMediaSDKJni") 
  {
    sources = [
      "wtk_media_sdk/common/wtk_media_instance.cc",
      "wtk_media_sdk/common/wtk_media_instance.h",
      "wtk_media_sdk/common/wtk_media_sdk.cc",
      "wtk_media_sdk/common/wtk_media_sdk.h",
      "wtk_media_sdk/common/wtk_media_sdk_define.h",
      "wtk_media_sdk/common/wtk_media_sdk_misc_define.h",
    ]
    deps = []
  
    sources += [
      "wtk_media_sdk/common/android/wtk_media_sdk_jni.cc",
      "wtk_media_sdk/common/android/wtk_media_sdk_jni.h",
    ]
    suppressed_configs += [ "//build/config/android:hide_all_but_jni_onload" ]
    configs += [ 
      "//build/config/android:hide_all_but_jni",
      ":wtk_common_warning",
    ]

    libs = [
      "log",
    ]
  
    if (is_clang) {
      suppressed_configs += [
        "//build/config/clang:extra_warnings",
        "//build/config/clang:find_bad_constructs",
      ]
    }

    deps += [
      "wtk_rtc_api:wtk_rtc_api",
      "wtk_service_client:wtk_service_api",
      ":wtk_sync_http_api",
      ":wtk_user_profile",
      ":wtk_media_log",
      ":wtk_notification",
      ":wtk_tools_func",
      ":wtk_call_ctrl",
      ":wtk_conf_ctrl",
      ":wtk_ptt_ctrl",
      "wtk_media_sdk/third_party/memory_pool:libmemory_pool",
    ]
  }
}